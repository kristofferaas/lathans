---
description: 
globs: 
alwaysApply: false
---
# Accessibility Rules for Universal Web Design

These rules ensure AI agents create websites that are accessible to ALL users, including those with visual, auditory, motor, cognitive, and neurological disabilities. Follow WCAG 2.2 AA standards as the minimum baseline, with AAA standards where feasible.

## Core Accessibility Principles (POUR)

### 1. PERCEIVABLE - Information must be presentable in ways users can perceive

#### Visual Accessibility (Blind & Low Vision Users)

**Text Alternatives (WCAG 1.1)**
```html
<!-- ALWAYS provide meaningful alt text -->
<img src="chart.png" alt="Sales increased 25% from Q1 to Q2 2024" />

<!-- For decorative images -->
<img src="decoration.png" alt="" role="presentation" />

<!-- For complex images, provide detailed descriptions -->
<img src="complex-chart.png" alt="Quarterly sales data" aria-describedby="chart-desc" />
<div id="chart-desc">
  Detailed description: Bar chart showing Q1 sales at $100k, Q2 at $125k, representing 25% growth...
</div>
```

**Color and Contrast (WCAG 1.4.3, 1.4.6, 1.4.11)**
```css
/* Minimum contrast ratios */
.text-normal { color: #000; background: #fff; } /* 21:1 ratio */
.text-large { color: #595959; background: #fff; } /* 3:1 minimum for large text */
.interactive-element { color: #0066cc; background: #fff; } /* 4.5:1 minimum */

/* Enhanced contrast for better accessibility */
.high-contrast { color: #000; background: #fff; } /* 21:1 ratio */

/* Never rely on color alone */
.error-message {
  color: #d32f2f;
  border-left: 4px solid #d32f2f; /* Visual indicator beyond color */
}
.error-message::before {
  content: "⚠ Error: "; /* Text indicator */
}
```

**Responsive and Scalable Design (WCAG 1.4.4, 1.4.10)**
```css
/* Text must be resizable up to 200% without loss of functionality */
html { font-size: 16px; }
body { font-size: 1rem; line-height: 1.5; }

/* Use relative units */
.container { max-width: 75rem; padding: 1rem; }

/* Ensure content reflows at 320px width (400% zoom) */
@media (max-width: 320px) {
  .content { display: block; width: 100%; }
}

/* Text spacing requirements (WCAG 1.4.12) */
.readable-text {
  line-height: 1.5;
  letter-spacing: 0.12em;
  word-spacing: 0.16em;
  margin-bottom: 2em;
}
```

#### Auditory Accessibility (Deaf & Hard of Hearing Users)

**Media Alternatives (WCAG 1.2)**
```html
<!-- Video with captions and transcripts -->
<video controls>
  <source src="video.mp4" type="video/mp4">
  <track kind="captions" src="captions.vtt" srclang="en" label="English">
  <track kind="descriptions" src="descriptions.vtt" srclang="en" label="Audio descriptions">
</video>

<!-- Provide transcript -->
<details>
  <summary>Video Transcript</summary>
  <p>Full text transcript of all spoken content and important visual information...</p>
</details>

<!-- Audio content alternatives -->
<audio controls>
  <source src="podcast.mp3" type="audio/mpeg">
  <p>Your browser doesn't support audio. <a href="transcript.html">Read the transcript</a></p>
</audio>
```

**Audio Control (WCAG 1.4.2)**
```html
<!-- Auto-playing audio must be controllable -->
<audio autoplay muted controls>
  <source src="background.mp3" type="audio/mpeg">
</audio>
<!-- Note: Avoid autoplay entirely when possible -->
```

### 2. OPERABLE - Interface components must be operable

#### Keyboard Accessibility (WCAG 2.1)

**Keyboard Navigation**
```html
<!-- All interactive elements must be keyboard accessible -->
<button type="button" onclick="handleClick()">Accessible Button</button>

<!-- Custom interactive elements need proper roles and keyboard handling -->
<div role="button" tabindex="0" onclick="handleClick()" onkeydown="handleKeyDown(event)">
  Custom Button
</div>

<!-- Skip links for keyboard users -->
<a href="#main-content" class="skip-link">Skip to main content</a>
<main id="main-content">
  <!-- Main content here -->
</main>
```

```css
/* Visible focus indicators (WCAG 2.4.7) */
:focus {
  outline: 2px solid #0066cc;
  outline-offset: 2px;
}

/* Skip links */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: #000;
  color: #fff;
  padding: 8px;
  text-decoration: none;
  z-index: 1000;
}
.skip-link:focus {
  top: 6px;
}
```

```javascript
// Keyboard event handling
function handleKeyDown(event) {
  if (event.key === 'Enter' || event.key === ' ') {
    event.preventDefault();
    handleClick();
  }
}

// Focus management for dynamic content
function openModal() {
  const modal = document.getElementById('modal');
  const firstFocusable = modal.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
  modal.style.display = 'block';
  firstFocusable?.focus();
}
```

#### Motor Accessibility

**Target Size (WCAG 2.5.8)**
```css
/* Minimum touch target size: 24x24px */
.touch-target {
  min-width: 44px; /* Recommended 44px for better usability */
  min-height: 44px;
  padding: 12px;
}

/* Adequate spacing between targets */
.button-group button {
  margin: 4px;
}
```

**Pointer Gestures (WCAG 2.5.1)**
```javascript
// Provide alternatives to complex gestures
function handleSwipe(direction) {
  // Also provide button alternatives
}

// Single-pointer alternatives
function handleDrag(element) {
  // Provide click-based alternative
  const moveButtons = document.createElement('div');
  moveButtons.innerHTML = `
    <button onclick="moveUp()">Move Up</button>
    <button onclick="moveDown()">Move Down</button>
  `;
  element.parentNode.appendChild(moveButtons);
}
```

### 3. UNDERSTANDABLE - Information and UI operation must be understandable

#### Cognitive Accessibility

**Clear Language and Structure (WCAG 3.1)**
```html
<!-- Specify page language -->
<html lang="en">

<!-- Indicate language changes -->
<p>The French phrase <span lang="fr">bonjour</span> means hello.</p>

<!-- Clear headings structure -->
<h1>Main Page Title</h1>
  <h2>Section Title</h2>
    <h3>Subsection Title</h3>

<!-- Meaningful page titles -->
<title>Contact Us - Company Name</title>
```

**Consistent Navigation (WCAG 3.2.3)**
```html
<!-- Consistent navigation order across pages -->
<nav aria-label="Main navigation">
  <ul>
    <li><a href="/">Home</a></li>
    <li><a href="/about">About</a></li>
    <li><a href="/services">Services</a></li>
    <li><a href="/contact">Contact</a></li>
  </ul>
</nav>
```

**Error Prevention and Handling (WCAG 3.3)**
```html
<!-- Clear labels and instructions -->
<label for="email">
  Email Address (required)
  <span class="help-text">We'll use this to send you updates</span>
</label>
<input type="email" id="email" required aria-describedby="email-error">
<div id="email-error" class="error-message" aria-live="polite"></div>

<!-- Confirmation for important actions -->
<form onsubmit="return confirmSubmission()">
  <button type="submit">Delete Account</button>
</form>
```

```javascript
// Accessible form validation
function validateForm() {
  const email = document.getElementById('email');
  const errorDiv = document.getElementById('email-error');
  
  if (!email.validity.valid) {
    errorDiv.textContent = 'Please enter a valid email address';
    email.setAttribute('aria-invalid', 'true');
    email.focus();
    return false;
  }
  
  errorDiv.textContent = '';
  email.setAttribute('aria-invalid', 'false');
  return true;
}
```

#### Predictable Functionality (WCAG 3.2)

```html
<!-- Consistent help placement (WCAG 3.2.6) -->
<div class="help-section">
  <a href="/help">Help</a>
  <a href="/contact">Contact Support</a>
</div>

<!-- No context changes on focus -->
<input type="text" onfocus="showHelp()" onblur="hideHelp()">
<!-- NOT: onfocus="window.open('help.html')" -->
```

### 4. ROBUST - Content must work with assistive technologies

#### Semantic HTML and ARIA

**Proper HTML Structure**
```html
<!-- Use semantic HTML elements -->
<header>
  <nav aria-label="Main navigation">
    <ul>
      <li><a href="/">Home</a></li>
    </ul>
  </nav>
</header>

<main>
  <article>
    <h1>Article Title</h1>
    <p>Article content...</p>
  </article>
  
  <aside aria-label="Related articles">
    <h2>Related Content</h2>
  </aside>
</main>

<footer>
  <p>&copy; 2024 Company Name</p>
</footer>
```

**ARIA Labels and Descriptions**
```html
<!-- Descriptive labels -->
<button aria-label="Close dialog">×</button>

<!-- Group related controls -->
<fieldset>
  <legend>Shipping Address</legend>
  <label for="street">Street Address</label>
  <input type="text" id="street">
</fieldset>

<!-- Live regions for dynamic content -->
<div aria-live="polite" aria-atomic="true" id="status"></div>

<!-- Complex widgets -->
<div role="tablist" aria-label="Settings">
  <button role="tab" aria-selected="true" aria-controls="panel1">General</button>
  <button role="tab" aria-selected="false" aria-controls="panel2">Privacy</button>
</div>
<div role="tabpanel" id="panel1" aria-labelledby="tab1">
  <!-- Panel content -->
</div>
```

**Data Tables (WCAG 1.3.1)**
```html
<!-- Accessible data tables -->
<table>
  <caption>Quarterly Sales Report</caption>
  <thead>
    <tr>
      <th scope="col">Quarter</th>
      <th scope="col">Sales</th>
      <th scope="col">Growth</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">Q1 2024</th>
      <td>$100,000</td>
      <td>5%</td>
    </tr>
  </tbody>
</table>
```

## Advanced Accessibility Patterns

### Forms and Input

```html
<!-- Accessible form patterns -->
<form novalidate>
  <fieldset>
    <legend>Personal Information</legend>
    
    <!-- Required field indication -->
    <label for="name">
      Full Name <span aria-label="required">*</span>
    </label>
    <input type="text" id="name" required aria-describedby="name-help">
    <div id="name-help" class="help-text">Enter your first and last name</div>
    
    <!-- Error handling -->
    <div id="name-error" class="error-message" aria-live="assertive"></div>
  </fieldset>
  
  <!-- Submit button -->
  <button type="submit">Submit Form</button>
</form>
```

### Modal Dialogs

```html
<!-- Accessible modal -->
<div role="dialog" aria-modal="true" aria-labelledby="modal-title" class="modal">
  <h2 id="modal-title">Confirm Action</h2>
  <p>Are you sure you want to delete this item?</p>
  <button onclick="confirmDelete()">Yes, Delete</button>
  <button onclick="closeModal()">Cancel</button>
</div>
```

```javascript
// Modal focus management
function openModal() {
  const modal = document.querySelector('.modal');
  const previousFocus = document.activeElement;
  
  modal.style.display = 'block';
  modal.querySelector('button').focus();
  
  // Trap focus within modal
  modal.addEventListener('keydown', trapFocus);
  
  function closeModal() {
    modal.style.display = 'none';
    previousFocus.focus();
    modal.removeEventListener('keydown', trapFocus);
  }
}
```

### Loading States and Progress

```html
<!-- Loading indicators -->
<div aria-live="polite" aria-busy="true">
  <span class="sr-only">Loading content, please wait...</span>
  <div class="spinner" aria-hidden="true"></div>
</div>

<!-- Progress indicators -->
<div role="progressbar" aria-valuenow="32" aria-valuemin="0" aria-valuemax="100" aria-label="Upload progress">
  <div class="progress-bar" style="width: 32%"></div>
</div>
```

## Testing and Validation

### Automated Testing
```javascript
// Include accessibility testing in your build process
// Use tools like axe-core, Pa11y, or Lighthouse

// Example axe-core integration
import axe from 'axe-core';

async function runAccessibilityTests() {
  const results = await axe.run();
  if (results.violations.length > 0) {
    console.error('Accessibility violations found:', results.violations);
  }
}
```

### Manual Testing Checklist

1. **Keyboard Navigation**
   - Tab through all interactive elements
   - Ensure logical tab order
   - Verify all functionality works with keyboard only

2. **Screen Reader Testing**
   - Test with NVDA (Windows), JAWS (Windows), VoiceOver (Mac)
   - Verify all content is announced correctly
   - Check heading structure and landmarks

3. **Visual Testing**
   - Test at 200% zoom
   - Verify color contrast ratios
   - Check with high contrast mode

4. **Motor Accessibility**
   - Verify touch targets are adequate size
   - Test with voice control software
   - Ensure no time-sensitive interactions

## CSS Accessibility Utilities

```css
/* Screen reader only text */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .button {
    border: 2px solid;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus management */
.focus-trap {
  position: relative;
}

.focus-trap::before,
.focus-trap::after {
  content: '';
  position: absolute;
  width: 1px;
  height: 1px;
  opacity: 0;
  pointer-events: none;
}
```

## Implementation Guidelines

### 1. Start with Semantic HTML
- Use proper HTML elements for their intended purpose
- Implement logical heading hierarchy (h1 → h2 → h3)
- Use landmarks (header, nav, main, aside, footer)

### 2. Progressive Enhancement
- Ensure basic functionality works without JavaScript
- Add ARIA only when semantic HTML isn't sufficient
- Test with assistive technologies regularly

### 3. Content Strategy
- Write clear, concise content
- Use plain language principles
- Provide multiple ways to access information

### 4. Performance Considerations
- Optimize for slow connections and older devices
- Ensure accessibility features don't impact performance
- Use efficient loading strategies

## Error Prevention Patterns

```html
<!-- Prevent errors before they occur -->
<label for="phone">Phone Number</label>
<input type="tel" id="phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" 
       placeholder="123-456-7890" aria-describedby="phone-format">
<div id="phone-format">Format: XXX-XXX-XXXX</div>

<!-- Confirmation for destructive actions -->
<button onclick="confirmDelete()" aria-describedby="delete-warning">
  Delete Account
</button>
<div id="delete-warning" class="warning">
  This action cannot be undone
</div>
```

## Remember: Accessibility is Not Optional

- **Legal Requirement**: Many jurisdictions require WCAG compliance
- **Moral Imperative**: 15% of the world's population has a disability
- **Business Case**: Accessible sites reach more users and rank better in search
- **Better UX**: Accessibility improvements benefit all users

## Quick Reference Checklist

- [ ] All images have meaningful alt text
- [ ] Color contrast meets WCAG AA standards (4.5:1 normal, 3:1 large text)
- [ ] All functionality available via keyboard
- [ ] Focus indicators are visible
- [ ] Headings create logical structure
- [ ] Forms have proper labels and error handling
- [ ] ARIA labels used appropriately
- [ ] Content is readable and understandable
- [ ] No auto-playing media
- [ ] Text can be resized to 200%
- [ ] Page has descriptive title
- [ ] Language is specified
- [ ] Error messages are clear and helpful

**Always test with real users who have disabilities when possible.**
