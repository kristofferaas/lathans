---
description: 
globs: 
alwaysApply: false
---
# Tailwind CSS v4 Responsive Design Rules

## Core Principles

### Mobile-First Approach
- Always start with mobile styles (no prefix) and progressively enhance for larger screens
- Use responsive prefixes: `sm:`, `md:`, `lg:`, `xl:`, `2xl:` for scaling up
- Think of breakpoints as "at this size and above" not "only at this size"

```html
<!-- ✅ Good: Mobile-first approach -->
<div class="text-sm md:text-base lg:text-lg xl:text-xl">
  Responsive text that scales up
</div>

<!-- ❌ Avoid: Desktop-first approach -->
<div class="text-xl lg:text-lg md:text-base sm:text-sm">
  This works against mobile-first principles
</div>
```

### Responsive Breakpoints (Tailwind v4)
- `sm`: 40rem (640px) - Small tablets
- `md`: 48rem (768px) - Medium tablets/small laptops  
- `lg`: 64rem (1024px) - Laptops/desktops
- `xl`: 80rem (1280px) - Large desktops
- `2xl`: 96rem (1536px) - Extra large screens

## Layout Systems

### Flexbox for 1D Layouts
Use flexbox for single-direction layouts and component-level organization:

```html
<!-- Responsive navigation -->
<nav class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4">
  <div class="flex items-center gap-2">
    <img src="logo.svg" class="size-8" alt="Logo" />
    <span class="font-semibold">Brand</span>
  </div>
  <div class="flex flex-col sm:flex-row gap-2 sm:gap-4">
    <a href="#" class="px-3 py-2 rounded-md hover:bg-gray-100">Home</a>
    <a href="#" class="px-3 py-2 rounded-md hover:bg-gray-100">About</a>
    <a href="#" class="px-3 py-2 rounded-md hover:bg-gray-100">Contact</a>
  </div>
</nav>

<!-- Card layout with responsive flex direction -->
<div class="flex flex-col md:flex-row gap-6 p-6">
  <img class="w-full md:w-48 h-48 object-cover rounded-lg md:shrink-0" src="image.jpg" alt="" />
  <div class="flex-1 space-y-4">
    <h2 class="text-xl md:text-2xl font-bold">Card Title</h2>
    <p class="text-gray-600">Card description content...</p>
  </div>
</div>
```

### Grid for 2D Layouts
Use CSS Grid for complex, two-dimensional layouts:

```html
<!-- Responsive grid gallery -->
<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 lg:gap-6">
  <div class="aspect-square bg-gray-200 rounded-lg"></div>
  <div class="aspect-square bg-gray-200 rounded-lg"></div>
  <div class="aspect-square bg-gray-200 rounded-lg"></div>
</div>

<!-- Complex dashboard layout -->
<div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
  <!-- Sidebar -->
  <aside class="lg:col-span-1 space-y-4">
    <nav class="space-y-2">
      <a href="#" class="block px-3 py-2 rounded-md bg-blue-50 text-blue-700">Dashboard</a>
      <a href="#" class="block px-3 py-2 rounded-md hover:bg-gray-50">Analytics</a>
    </nav>
  </aside>
  
  <!-- Main content -->
  <main class="lg:col-span-3 space-y-6">
    <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4">
      <div class="p-6 bg-white rounded-lg shadow-sm border">Metric 1</div>
      <div class="p-6 bg-white rounded-lg shadow-sm border">Metric 2</div>
      <div class="p-6 bg-white rounded-lg shadow-sm border md:col-span-2 xl:col-span-1">Metric 3</div>
    </div>
  </main>
</div>

<!-- 12-column responsive grid system -->
<div class="grid grid-cols-12 gap-4 lg:gap-6">
  <div class="col-span-12 md:col-span-8 lg:col-span-9">
    <article class="prose max-w-none">Main content</article>
  </div>
  <aside class="col-span-12 md:col-span-4 lg:col-span-3">
    <div class="sticky top-4 space-y-4">Sidebar content</div>
  </aside>
</div>
```

## Container Queries (Tailwind v4)
Use container queries for truly responsive components:

```html
<!-- Container query setup -->
<div class="@container">
  <div class="flex flex-col @md:flex-row gap-4 p-4">
    <img src="product.jpg" class="w-full @md:w-1/3 rounded-lg" alt="Product" />
    <div class="space-y-2">
      <h3 class="text-lg @md:text-xl font-bold">Product Name</h3>
      <p class="@md:text-lg text-gray-600 @sm:hidden @md:block">
        Detailed description that shows/hides based on container size
      </p>
      <div class="flex @md:items-center gap-2 flex-col @md:flex-row">
        <span class="text-xl font-bold">$299.99</span>
        <button class="bg-blue-500 text-white px-4 py-2 rounded-lg">Add to Cart</button>
      </div>
    </div>
  </div>
</div>

<!-- Named containers for complex layouts -->
<div class="@container/main">
  <div class="@container/sidebar">
    <div class="flex flex-col @sm/main:flex-row gap-4">
      <aside class="@sm/sidebar:w-64">Sidebar</aside>
      <main class="flex-1">Main content</main>
    </div>
  </div>
</div>
```

## Typography & Spacing

### Responsive Typography
```html
<!-- Responsive headings -->
<h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold leading-tight">
  Responsive Heading
</h1>

<!-- Body text with responsive sizing -->
<p class="text-sm sm:text-base lg:text-lg leading-relaxed text-gray-700">
  Body text that scales appropriately across devices
</p>

<!-- Responsive line height and spacing -->
<div class="space-y-4 sm:space-y-6 lg:space-y-8">
  <p class="text-base leading-6 sm:text-lg sm:leading-7 lg:text-xl lg:leading-8">
    Paragraph with responsive line height
  </p>
</div>
```

### Responsive Spacing
```html
<!-- Responsive padding and margins -->
<section class="px-4 sm:px-6 lg:px-8 py-8 sm:py-12 lg:py-16">
  <div class="max-w-7xl mx-auto">
    <div class="space-y-6 sm:space-y-8 lg:space-y-12">
      <!-- Content with responsive spacing -->
    </div>
  </div>
</section>

<!-- Responsive gaps -->
<div class="flex flex-wrap gap-2 sm:gap-4 lg:gap-6">
  <button class="px-3 py-2 sm:px-4 sm:py-2 lg:px-6 lg:py-3">Button</button>
</div>
```

## Component Patterns (Shadcn UI Inspired)

### Responsive Cards
```html
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 lg:gap-6">
  <div class="group relative overflow-hidden rounded-lg border bg-white shadow-sm transition-shadow hover:shadow-md">
    <div class="aspect-video overflow-hidden">
      <img src="image.jpg" class="size-full object-cover transition-transform group-hover:scale-105" alt="" />
    </div>
    <div class="p-4 sm:p-6">
      <h3 class="text-lg sm:text-xl font-semibold mb-2">Card Title</h3>
      <p class="text-sm sm:text-base text-gray-600 mb-4">Card description</p>
      <button class="w-full sm:w-auto px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
        Action
      </button>
    </div>
  </div>
</div>
```

### Responsive Forms
```html
<form class="space-y-4 sm:space-y-6">
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
    <div class="space-y-2">
      <label class="text-sm font-medium">First Name</label>
      <input class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
    </div>
    <div class="space-y-2">
      <label class="text-sm font-medium">Last Name</label>
      <input class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
    </div>
  </div>
  
  <div class="space-y-2">
    <label class="text-sm font-medium">Email</label>
    <input type="email" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
  </div>
  
  <div class="flex flex-col sm:flex-row gap-3 sm:justify-end">
    <button type="button" class="px-4 py-2 border rounded-md hover:bg-gray-50 transition-colors">
      Cancel
    </button>
    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
      Submit
    </button>
  </div>
</form>
```

### Responsive Navigation
```html
<!-- Mobile-first navigation with hamburger menu -->
<header class="sticky top-0 z-50 bg-white border-b">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center gap-2">
        <img src="logo.svg" class="size-8" alt="Logo" />
        <span class="font-semibold text-lg">Brand</span>
      </div>
      
      <!-- Desktop navigation -->
      <nav class="hidden md:flex items-center gap-6">
        <a href="#" class="text-gray-700 hover:text-gray-900 transition-colors">Home</a>
        <a href="#" class="text-gray-700 hover:text-gray-900 transition-colors">About</a>
        <a href="#" class="text-gray-700 hover:text-gray-900 transition-colors">Services</a>
        <a href="#" class="text-gray-700 hover:text-gray-900 transition-colors">Contact</a>
      </nav>
      
      <!-- Mobile menu button -->
      <button class="md:hidden p-2 rounded-md hover:bg-gray-100">
        <svg class="size-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>
  
  <!-- Mobile navigation menu -->
  <div class="md:hidden border-t bg-white">
    <nav class="px-4 py-2 space-y-1">
      <a href="#" class="block px-3 py-2 rounded-md hover:bg-gray-100">Home</a>
      <a href="#" class="block px-3 py-2 rounded-md hover:bg-gray-100">About</a>
      <a href="#" class="block px-3 py-2 rounded-md hover:bg-gray-100">Services</a>
      <a href="#" class="block px-3 py-2 rounded-md hover:bg-gray-100">Contact</a>
    </nav>
  </div>
</header>
```

## Tailwind v4 Specific Features

### New Size Utility
```html
<!-- Use size-* instead of w-* h-* when dimensions are equal -->
<div class="size-4">Icon container</div>
<div class="size-8 sm:size-10 lg:size-12">Responsive square</div>

<!-- Still use separate w-* h-* when dimensions differ -->
<div class="w-full h-64 sm:h-80 lg:h-96">Banner</div>
```

### Dynamic Utility Values
```html
<!-- Any spacing value is now valid -->
<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-15 gap-4">
  <div class="mt-17 p-13">Content with custom spacing</div>
</div>

<!-- Custom width values -->
<div class="w-29 sm:w-47 lg:w-103">Custom width container</div>
```

### Theme Configuration (v4 CSS)
```css
@import "tailwindcss";

:root {
  --background: hsl(0 0% 100%);
  --foreground: hsl(0 0% 3.9%);
  --primary: hsl(221.2 83.2% 53.3%);
  --primary-foreground: hsl(210 40% 98%);
}

.dark {
  --background: hsl(0 0% 3.9%);
  --foreground: hsl(0 0% 98%);
  --primary: hsl(217.2 91.2% 59.8%);
  --primary-foreground: hsl(222.2 84% 4.9%);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
}
```

## Best Practices

### Performance & Optimization
- Use `object-cover` and `object-fit` for responsive images
- Implement `aspect-ratio` utilities for consistent proportions
- Use `max-w-*` utilities to prevent content from becoming too wide
- Leverage `sticky` positioning for responsive navigation

### Accessibility
- Ensure touch targets are at least 44px on mobile (`min-h-11` or `p-3`)
- Use semantic HTML elements with Tailwind classes
- Maintain sufficient color contrast across all breakpoints
- Test with screen readers and keyboard navigation

### Common Patterns
```html
<!-- Responsive container with max-width -->
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- Content -->
</div>

<!-- Responsive aspect ratios -->
<div class="aspect-video sm:aspect-[4/3] lg:aspect-[16/9]">
  <img src="image.jpg" class="size-full object-cover" alt="" />
</div>

<!-- Show/hide elements responsively -->
<div class="block sm:hidden">Mobile only content</div>
<div class="hidden sm:block lg:hidden">Tablet only content</div>
<div class="hidden lg:block">Desktop only content</div>

<!-- Responsive text alignment -->
<div class="text-center sm:text-left lg:text-center">
  Responsive text alignment
</div>
```

### Testing Responsive Design
- Test on actual devices, not just browser dev tools
- Use browser dev tools to simulate different screen sizes
- Test touch interactions on mobile devices
- Verify that all interactive elements are accessible via keyboard
- Check that content reflows properly at all breakpoints

## Migration from v3 to v4
- Replace `w-* h-*` with `size-*` when dimensions are equal
- Update color references to use new OKLCH format
- Remove `tailwindcss-animate` and use `tw-animate-css`
- Update CSS variables to use `@theme inline` directive
- Remove `forwardRef` usage in React components (React 19)

Remember: Always start mobile-first, use semantic HTML, maintain accessibility, and test across real devices for the best responsive experience.
